<?xml version="1.0"?>

<launch>
  <arg name="mode" default="robot"/>
  <arg name="world_name" default="$(find line_follower)/maps/lfm1.world"/>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x" default="0.276911"/>
  <arg name="y" default="0.003131"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="0.022687"/>
  
  <!-- Gazebo -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="false"/> 
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="false"/>
  </include>
  
  <!-- Spawn robot -->
  <param  name="robot_description" command="$(find xacro)/xacro --inorder 
          $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro"/>
  
  <node pkg="gazebo_ros" name="urdf_spawner" type="spawn_model" 
        args="-urdf -model turtlebot3_$(arg model) -param robot_description 
        -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg yaw)"/>
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
  
  <!-- RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find turtlebot3_gazebo)/rviz/turtlebot3_gazebo_model.rviz"/>
 
  <!-- Launch normal mode -->
  <group if="$(eval arg('mode')=='robot')">
    <!-- Detection node -->
    <node pkg="line_follower" name="line_follower" type="line_follower.py" output="screen"/>
    <!-- Arduino communication node -->
    <node pkg="rosserial_python" name="ros_serial" type="serial_node.py" 
          args="_port:=/dev/ttyACM0 _baud:=9600" respawn="true" output="screen"/>
  </group>

  <!-- Launch simulation mode -->
  <group if="$(eval arg('mode')=='sim')">
    <!-- Detection node -->
    <node pkg="line_follower" name="line_follower" type="line_follower_sim.py" output="screen"/>
    <!-- Simulated movement node -->
    <node pkg="line_follower" name="move" type="move_sim.py" output="screen"/>
  </group>




</launch>
